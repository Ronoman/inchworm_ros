#!/usr/bin/env python3

import glob, subprocess

def main():
  '''
  The purpose of this script is to generate an SDF for every URDF in the /urdf directory of inchworm_description. RViz needs URDFs to visualize properly,
  but the magnet sim requires SDFs to function properly*. Therefore we need a copy of each. URDF->SDF conversion is lossless, so we can automate the generation
  with this script using gazebo command line tools. This script wraps the generated <model> tag in a xacro macro with the filename, so that it can be invoked
  by a "master" SDF that will act as the parent model for all sub models. The `all_models.sdf` file is also generated by this script.
  '''
  
  # Scan and grab every file that ends in .urdf in /urdf
  filenames = glob.glob("../urdf/*.urdf")

  # For each URDF
  for urdf in filenames:
    sdf_filename = urdf.split("/")[-1][:-4] + "sdf"
    print(sdf_filename)

    # Generate an SDF with command line interface
    subprocess.call(["gz", "sdf", "-p", urdf, ">", sdf_filename])

    # Convert into an XML object
    # Wrap the <model> tag with a <xacro:macro> tag
    # Write the contents to `sdf/<same_name>.sdf`

  # Generate all_models.sdf file and write to sdf/all_models.sdf
    # Create SDF template
    # Within the master model, invoke each macro that was generated in the previous step

if __name__ == "__main__":
  main()