<launch>
  <arg name="model" default="inchworm"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="true"/>

  <arg name="real_robot" default="false" />

  <!-- Launch Gazebo, only if we're not running on the real robot-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" unless="$(arg real_robot)">
    <arg name="gui" default="true"/>
    <arg name="verbose" default="true" />
    <arg name="paused" default="$(arg paused)"/>
  </include>

  <!-- Everything to be launched in the robot namespace. Robot description, robot state publisher -->
  <group ns="$(arg model)">

    <!-- Robot and shingle description for RViz -->
    <param name="/inchworm/robot_description" command="$(find xacro)/xacro $(find inchworm_description)/urdf/$(arg model)_description.urdf"/>
    <param name="/inchworm/shingle_description" command="$(find xacro)/xacro $(find inchworm_description)/urdf/shingle_description.urdf" />

    <!-- Robot description for gazebo + magnet sim -->
    <param name="/inchworm/robot_description_sdf" command="$(find xacro)/xacro $(find inchworm_description)/sdf/all_models.sdf" />

    <rosparam file="$(find inchworm_description)/config/joint_names_inchworm_description.yaml" command="load" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

  </group>

  <rosparam file="$(find inchworm_description)/config/inchworm_control.yaml" command="load" />

  <!-- Launch the controllers which provide a command interface to robot joints. -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"  args="--namespace=/inchworm
        joint_state_controller
        position_trajectory_controller" unless="$(arg real_robot)"/>

  <!-- Spawn the robot sdf into the sim -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-param $(arg model)/robot_description_sdf -sdf -model $(arg model)" output="screen" />

  <!-- Publishes world -> iw_root transform. -->
  <node name="iw_tf_republisher" pkg="inchworm_description" type="iw_tf_republisher.py" />

  <!-- Informs the assembly sim about magnet states. -->
  <node name="magnet_state_observer" pkg="inchworm_description" type="magnet_state_observer.py" />

  <!-- Startup RViz-->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find inchworm_description)/rviz/inchworm_frames.rviz" />

  <!-- Start the MoveGroup that will control the robot. -->
  <include file="$(find inchworm_moveit)/launch/move_group.launch" />
</launch>